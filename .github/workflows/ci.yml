name: Continuous Integration

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  test-typescript:
    name: TypeScript Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v5

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: npm

      - name: Install Dependencies
        id: npm-ci
        run: npm ci

      - name: Check Format
        id: npm-format-check
        run: npm run format:check

      - name: Lint
        id: npm-lint
        run: npm run lint

      - name: Test
        id: npm-ci-test
        run: npm run ci-test

  test-action:
    name: GitHub Actions Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Test Local Action
        id: test-action
        uses: ./
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          gemini-api-key:
            ${{ secrets.GEMINI_API_KEY || 'fake-key-for-testing' }}
          grouping-labels: 'test,ci'
          require-feature-label: 'false'
        continue-on-error: true

      - name: Print Outputs
        id: output
        run: |
          echo "Action completed with status: ${{ steps.test-action.outcome }}"
          echo "Release date: ${{ steps.test-action.outputs.release-date }}"
          echo "Release timestamp: ${{ steps.test-action.outputs.release-timestamp }}"
          echo "Has previous release: ${{ steps.test-action.outputs.has-previous-release }}"
          echo "Total PRs: ${{ steps.test-action.outputs.total-prs }}"
          echo "Label groups: ${{ steps.test-action.outputs.label-groups }}"
          echo "Has content: ${{ steps.test-action.outputs.has-content }}"

      - name: Validate Basic Outputs
        run: |
          # Check that basic outputs are set even if API calls fail
          if [ -z "${{ steps.test-action.outputs.release-date }}" ]; then
            echo "❌ release-date output not set"
            exit 1
          fi
          if [ -z "${{ steps.test-action.outputs.release-timestamp }}" ]; then
            echo "❌ release-timestamp output not set"
            exit 1
          fi
          echo "✅ Basic outputs are properly set"
